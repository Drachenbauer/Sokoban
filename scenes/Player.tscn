[gd_scene load_steps=13 format=2]

[ext_resource path="res://assets/Player.png" type="Texture" id=1]

[sub_resource type="GDScript" id=4]
script/source = "extends Node2D


# Declare member variables here:
onready var animation = $AnimationPlayer
onready var sprite = $Sprite

var grid
var type
var speed = 0
var move = false
var step = 0
var pos = Vector2()
var old_pos = Vector2()
var undo_pos = Vector2()
var direction = Vector2()
var key_pressed
var animation_name = \"Idle_D\"
var boxes

const DIR = {\"left\" : Vector2(-1, 0), \"right\" : Vector2(1, 0), \"up\" : Vector2(0, -1), \"down\" : Vector2(0, 1)}
const STEP = 16.0 / 36.0

# Called when the node enters the scene tree for the first time.
func _ready():
	grid = get_parent()
	type = grid.PLAYER
	pos = position
	boxes = get_tree().get_nodes_in_group(\"Boxes\")
	animation.play(\"Idle_D\")


func _process(_delta):
	move()
	animate_player()


# warning-ignore:function_conflicts_variable
func move():
	if !move:
		if Input.is_action_pressed(\"left\"):
			start_mov(\"left\")
		elif Input.is_action_pressed(\"right\"):
			start_mov(\"right\")
		elif Input.is_action_pressed(\"up\"):
			start_mov(\"up\")
		elif Input.is_action_pressed(\"down\"):
			start_mov(\"down\")
		elif Input.is_action_just_pressed(\"undo\"):
			undo_step()
		
	step_mov()


func start_mov(key):
	direction = DIR[key]
	
	if grid.is_valid_move(pos, direction) || step > 0:
		old_pos = pos
		key_pressed = key
		move = true
		
		if grid.is_pushing(old_pos, direction):
			G.pushes_player.append(pos)
			G.pushes_boxes.append([])
			
			for box in boxes:
				G.pushes_boxes[G.pushes].append(box.pos)
			
			G.pushes += 1
	else:
		direction = Vector2(0, 0)


func step_mov():
	if move:
		for box in boxes:
				box.push(direction)
			
		step += 1
		pos += STEP * direction
		
		if step == 36:
			move = false
			step = 0
			pos = Vector2(round(pos.x), round(pos.y))
			grid.update_child_pos(self)
			grid.count_boxes_on_target()
			if !Input.is_action_pressed(key_pressed):
				direction = Vector2(0, 0)
					
		position = pos
	else:
		direction = Vector2(0, 0)


func undo_step():
	if !G.pushes_player.size() == 0:
		G.pushes -= 1
		undo_pos = position
		position = G.pushes_player[G.pushes]
		pos = position
		grid.update_child_pos_undo(self)
		G.pushes_player.remove(G.pushes)
		
		for box in boxes:
			box.undo_pos = box.position
			box.position = G.pushes_boxes[G.pushes][0]
			box.pos = box.position
			grid.update_child_pos_undo(box)
			box.check_display_state()
			G.pushes_boxes[G.pushes].remove(0)
		
		G.pushes_boxes.remove(G.pushes)
		grid.count_boxes_on_target()


func animate_player():
	if direction == DIR[\"left\"]:
		if grid.is_pushing(old_pos, direction):
			animation_name = \"Push\"
		else:
			animation_name = \"Walk\"
		sprite.flip_h = true
	elif direction == DIR[\"right\"]:
		if grid.is_pushing(old_pos, direction):
			animation_name = \"Push\"
		else:
			animation_name = \"Walk\"
		sprite.flip_h = false
	elif direction == DIR[\"up\"]:
		if grid.is_pushing(old_pos, direction):
			animation_name = \"Push_U\"
		else:
			animation_name = \"Walk_U\"
		sprite.flip_h = false
	elif direction == DIR[\"down\"]:
		if grid.is_pushing(old_pos, direction):
			animation_name = \"Push_D\"
		else:
			animation_name = \"Walk_D\"
		sprite.flip_h = false
	else:
		if animation_name == \"Walk\" or animation_name == \"Push\":
			animation_name = \"Idle\"
		elif animation_name == \"Walk_U\" or animation_name == \"Push_U\":
			animation_name = \"Idle_U\"
		elif animation_name == \"Walk_D\" or animation_name == \"Push_D\":
			animation_name = \"Idle_D\"
	
	if animation.current_animation != animation_name:
		animation.play(animation_name)
"

[sub_resource type="Animation" id=5]
resource_name = "Idle"
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 8, 9, 10, 11, 10, 9 ]
}

[sub_resource type="Animation" id=6]
resource_name = "Idle_D"
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 24, 25, 26, 27, 26, 25 ]
}

[sub_resource type="Animation" id=7]
resource_name = "Idle_U"
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 40, 41, 42, 43, 42, 41 ]
}

[sub_resource type="Animation" id=8]
resource_name = "Push"
length = 0.6
loop = true
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.15, 0.3, 0.45 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 4, 5, 6, 7 ]
}

[sub_resource type="Animation" id=9]
resource_name = "Push_D"
length = 0.6
loop = true
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.15, 0.3, 0.45 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 20, 21, 22, 23 ]
}

[sub_resource type="Animation" id=10]
resource_name = "Push_U"
length = 0.6
loop = true
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.15, 0.3, 0.45 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 36, 37, 38, 39 ]
}

[sub_resource type="Animation" id=11]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 26 ]
}

[sub_resource type="Animation" id=12]
resource_name = "Walk"
length = 0.6
loop = true
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.15, 0.3, 0.45 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}

[sub_resource type="Animation" id=13]
resource_name = "Walk_D"
length = 0.6
loop = true
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.15, 0.3, 0.45 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 16, 17, 18, 19 ]
}

[sub_resource type="Animation" id=14]
resource_name = "Walk_U"
length = 0.6
loop = true
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.15, 0.3, 0.45 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 32, 33, 34, 35 ]
}

[node name="Player" type="Node2D"]
script = SubResource( 4 )

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( -2, -2 )
texture = ExtResource( 1 )
centered = false
hframes = 8
vframes = 8
frame = 26

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Sprite")
anims/Idle = SubResource( 5 )
anims/Idle_D = SubResource( 6 )
anims/Idle_U = SubResource( 7 )
anims/Push = SubResource( 8 )
anims/Push_D = SubResource( 9 )
anims/Push_U = SubResource( 10 )
anims/RESET = SubResource( 11 )
anims/Walk = SubResource( 12 )
anims/Walk_D = SubResource( 13 )
anims/Walk_U = SubResource( 14 )
